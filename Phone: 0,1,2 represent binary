假设除了用1和0表示数字的binary方式，还可以用2来表示，给一个数字，求有多少种表达方式。 

例子：4 = 100, 20 所以答案是2。 8 = 1000, 200, 120, 112 所以答案是4。

链接: https://instant.1point3acres.com/thread/180724


0: 0 
1: 1 
2: 10，2 
3: 11 
4: 100， 20， 12 
5: 101， 21 
6: 110， 22， 102 
7: 111 
8: 1000， 200， 120， 112 我们可以分别讨论奇数偶数。 
如果n是奇数， 那么他的binary表示方式的最右位必然是1， 所以我们只要考虑除去最后一位剩下左边几位的表现形式，即dp = dp 
如果n是偶数，那么他的binary表示方式的最右位必然是0或2，我们分情况讨论： 
    如果最右位是0，那么只要把n/2的每种表示方式后面加个0即可， 即dp = dp 
    如果最右位是2，类似的可以得到dp = dp 
    
最后的代码如下：

int countWays(int n){ 
vector dp = {1, 1}; // 1 way when n = 0, 1 way when n = 1 

for(int i = 2; i<=n; i++) { 
    int ways = 0; 
    if(i%2) { 
        // i is odd number, right most bit must be one 
        ways = dp[(i-1)/2]; }
    else { 
        // i is even number, right most bit can be 0 or 2 
        // when right most bit is 0 
        ways = dp[i/2]; 
        // when right most bit is 2 
        ways += dp[(i-2)/2]; 
        } 
        
    dp.push_back(ways); } 
    return dp[n]; 
}

